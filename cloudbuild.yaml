timeout: 120s

options:
  dynamic_substitutions: true
  substitution_option: 'ALLOW_LOOSE'
substitutions:
  _REGION: 'europe-docker.pkg.dev'
  _ARTIFACT_REPO: 'gs://prod-rest_cloudbuild/hello-world'
  # $REPO_NAME means GitHub's repo name. It will be container name
  _COMMIT_TAG: '${_REGION}/${PROJECT_ID}/test-google-cloud-build/${REPO_NAME}:${SHORT_SHA}'
  _LATEST_TAG: '${_REGION}/${PROJECT_ID}/test-google-cloud-build/${REPO_NAME}:latest'

steps:
  # проверяем структуру директорий
  - name: 'maven:3.8.4-eclipse-temurin-17-alpine'
    entrypoint: 'find'
  # собственно собираем джарник
  - name: 'maven:3.8.4-eclipse-temurin-17-alpine'
    entrypoint: 'mvn'
    args: ['package', '-Dmaven.test.skip=true']
    dir: 'helloworld'
  # пулим старый контейнер, если он есть
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker pull ${_LATEST_TAG} || exit 0']
    dir: 'helloworld'

  # билдим контейнер используя кэш спуленного ранее контейнера,
  # на основе указанного докерфайла
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build',
           '-t', '${_COMMIT_TAG}',
           '-t', '${_LATEST_TAG}',
           '--cache-from', '${_LATEST_TAG}',
           '-f', 'Dockerfile',
           '.']
    dir: 'helloworld'

artifacts:
  objects:
    location: '${_ARTIFACT_REPO}'
    paths: ['./helloworld/target/h*.jar']

images:
  - '${_COMMIT_TAG}'
  - '${_LATEST_TAG}'




# example 2
#  - name: "alpine"
#    args: ['echo', '$_TEST_ENV']
#substitutions:
#  _TEST_ENV: Hello World from Alpine STEP in Google Cloud Build.


